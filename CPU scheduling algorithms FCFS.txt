//FCFS	

#include<stdio.h>
struct Process
{
int id;
int arrival_time;
int burst_time;
};
void FCFS(struct Process processes[], int n)
{
int waiting_time = 0;
int turnaround_time = 0;
printf("Process ID\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
for (int i = 0; i < n; i++)
{
printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", processes[i].id, processes[i].arrival_time, processes[i].burst_time, waiting_time, waiting_time+processes[i].burst_time);
turnaround_time += waiting_time + processes[i].burst_time - processes[i].arrival_time;
waiting_time += processes[i].burst_time;
}
printf("\nAverage Waiting Time: %.2f\n", (float)waiting_time / n);
printf("Average Turnaround Time: %.2f\n", (float)turnaround_time / n);
}
int main()
{
   int n;
   printf("Enter the number of processes: ");
   scanf("%d", &n);
   struct Process processes[n];
   for (int i = 0; i < n; i++)
   {
processes[i].id = i + 1;
printf("Enter Arrival Time for Process %d: ", i + 1);
scanf("%d", &processes[i].arrival_time);
printf("Enter Burst Time for Process %d: ", i + 1);
scanf("%d", &processes[i].burst_time);
   }
   for (int i = 0; i < n - 1; i++)
   {
for (int j = 0; j < n - i - 1; j++)
{
   if (processes[j].arrival_time > processes[j + 1].arrival_time)
   {
       struct Process temp = processes[j];
       processes[j] = processes[j + 1];
       processes[j + 1] = temp;
   }
}
   }
   FCFS(processes, n);
   return 0;
}

