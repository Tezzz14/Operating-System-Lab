//Priority

#include<stdio.h>
#include <stdio.h>
struct Process {
   int id;
   int burst_time;
   int priority;
   int waiting_time;
   int turnaround_time;
};
void priorityScheduling(struct Process processes[], int n) {
   for (int i = 0; i < n - 1; i++) {
for (int j = 0; j < n - i - 1; j++) {
   if (processes[j].priority > processes[j + 1].priority) {
       // Swap
       struct Process temp = processes[j];
       processes[j] = processes[j + 1];
       processes[j + 1] = temp;
   }
}
   }
   int total_waiting_time = 0;
   for (int i = 0; i < n; i++) {
processes[i].waiting_time = total_waiting_time;
total_waiting_time += processes[i].burst_time;
processes[i].turnaround_time = processes[i].waiting_time + processes[i].burst_time;
   }
   printf("Process ID\tBurst Time\tPriority\tWaiting Time\tTurnaround Time\n");
   for (int i = 0; i < n; i++) {
printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", processes[i].id, processes[i].burst_time, processes[i].priority, processes[i].waiting_time, processes[i].turnaround_time);
   }
   float avg_waiting_time = (float)total_waiting_time / n;
   float avg_turnaround_time = 0;
   for (int i = 0; i < n; i++) {
avg_turnaround_time += processes[i].turnaround_time;
   }
   avg_turnaround_time /= n;
   printf("\nAverage Waiting Time: %.2f\n", avg_waiting_time);
   printf("Average Turnaround Time: %.2f\n", avg_turnaround_time);
}
int main() {
   int n;
   printf("Enter the number of processes: ");
   scanf("%d", &n);
   struct Process processes[n];
   for (int i = 0; i < n; i++) {
processes[i].id = i + 1;
printf("Enter Burst Time for Process %d: ", i + 1);
scanf("%d", &processes[i].burst_time);
printf("Enter Priority for Process %d: ", i + 1);
scanf("%d", &processes[i].priority);
   }
   priorityScheduling(processes, n);
   return 0;
   }
