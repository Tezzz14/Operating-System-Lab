//SJF

#include <stdio.h>
struct Process
{
int id;
int arrival_time;
int burst_time;
int waiting_time;
int turnaround_time;
int completed;
};
void SJF(struct Process processes[], int n)
{
int total_waiting_time = 0;
int total_turnaround_time = 0;
for (int i = 0; i < n; i++)
{
int shortest = i;
for (int j = i + 1; j < n; j++)
{
  if (processes[j].burst_time < processes[shortest].burst_time)
  {
        shortest = j;
    }
}
struct Process temp = processes[i];
processes[i] = processes[shortest];
processes[shortest] = temp;

processes[i].waiting_time = total_waiting_time;
total_waiting_time += processes[i].burst_time;
}
for (int i = 0; i < n; i++)
{
processes[i].turnaround_time = processes[i].waiting_time + processes[i].burst_time;
total_turnaround_time += processes[i].turnaround_time;
}
printf("Process ID\tArrival Time\tBurst Time\tWaiting Time\tTurnaround Time\n");
for (int i = 0; i < n; i++)
{
printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", processes[i].id, processes[i].arrival_time, processes[i].burst_time, processes[i].waiting_time, processes[i].turnaround_time);
}
printf("\nAverage Waiting Time: %.2f\n", (float)total_waiting_time / n);
printf("Average Turnaround Time: %.2f\n", (float)total_turnaround_time / n);
}
int main(){
   int n;
   printf("Enter the number of processes: ");
   scanf("%d", &n);
   struct Process processes[n];
   for (int i = 0; i < n; i++) {
processes[i].id = i + 1;
printf("Enter Arrival Time for Process %d: ", i + 1);
scanf("%d", &processes[i].arrival_time);
printf("Enter Burst Time for Process %d: ", i + 1);
scanf("%d", &processes[i].burst_time);
processes[i].completed = 0;
   }
   SJF(processes, n);
   return 0;
}
